<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                                       http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
                                       http://www.liquibase.org/xml/ns/dbchangelog-ext
                                       http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
  <changeSet id="14102019_1437" author="R-VdP">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="0">
        select count(*)
        from openmrs.role_privilege
        where role      = 'Anonymous'
          and privilege = 'Get Locations';
      </sqlCheck>
    </preConditions>
    <comment>Allow fetching locations anonymously.</comment>
    <sql>
      insert into openmrs.role_privilege(role, privilege)
      values ('Anonymous', 'Get Locations');
    </sql>
  </changeSet>
  <changeSet id="08102019_1553" author="R-VdP">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="0">
        select count(*)
        from openmrs.users
        where username="superman";
      </sqlCheck>
    </preConditions>
    <comment>Init the superman user.</comment>
    <sql>
      -- The below seem to cause issues...
      delete from provider
      where identifier in ('UNKNOWN', 'LABMANAGER', 'LABSYSTEM');

      set @uuid = uuid();

      insert into openmrs.person(gender, birthdate, birthdate_estimated, dead,
                                 death_date, cause_of_death, creator,
                                 date_created, changed_by, date_changed, voided,
                                 voided_by, date_voided, void_reason, uuid,
                                 deathdate_estimated, birthtime)
      values ('M', null, 0, 0, null, null, 1, now(), null,
              null, 0, null, null, null, @uuid, 0, null);

      set @pid = null;
      select person_id into @pid from person where uuid = @uuid;

      insert into openmrs.person_name(preferred, person_id, prefix, given_name,
                                      middle_name, family_name_prefix, family_name,
                                      family_name2, family_name_suffix, degree,
                                      creator, date_created, voided, voided_by,
                                      date_voided, void_reason, changed_by,
                                      date_changed, uuid)
      values (1, @pid, null, 'Super', '', null, 'Man', null, null,
              null, 1, now(), 0, null, null, null, null, null, uuid());

      -- Create a provider
      insert into openmrs.provider(person_id, name, identifier, creator,
                                   date_created, changed_by, date_changed,
                                   retired, retired_by, date_retired,
                                   retire_reason, uuid, provider_role_id)
      values (@pid, null, 'SUPERMAN', 1, now(), null, null,
              0, null, null, null, uuid(), null);

      -- Create a user with id @pid
      insert into openmrs.users(system_id, username, password, salt, secret_question,
                                secret_answer, creator, date_created, changed_by,
                                date_changed, person_id, retired, retired_by,
                                date_retired, retire_reason, uuid)
      values ('SUPERMAN', 'superman',
              'fe0f4ff3ef8f1c08e773f44049cb3fc5d7245d05a2def777f6393aad89a1285f67f3664f4df7cf7d04c373960fa4ebb89239be6820b788fe741c83a0c24db644',
              'b084dc52f7de4003c536d0c2a6ed3fd0bc10256d0ac5ef69cdd223be5d39d30ea810bb24dfa11ef6b85f778fe4f5e535e1e7bad83c8e8ca0ec09dc0d1c48f9d9',
              '', null, 1, now(), 1, now(), @pid, 0, null, null, null, uuid());
    </sql>
  </changeSet>
  <changeSet id="10122019_1208" author="R-VdP">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="1">
        select count(*)
        from visit_type
        where name = "LAB VISIT";
      </sqlCheck>
    </preConditions>
    <comment>Remove the LAB VISIT visit type.</comment>
    <sql>
      delete from openmrs.visit_type
      where name = "LAB VISIT";
    </sql>
  </changeSet>
  <changeSet id="10122019_1213" author="R-VdP">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="0">
        select count(*)
        from visit_type
        where name = "OPD";
      </sqlCheck>
    </preConditions>
    <comment>Add the OPD visit type.</comment>
    <sql>
      insert into openmrs.visit_type(name, description, creator, date_created,
                                     changed_by, date_changed, retired, retired_by,
                                     date_retired, retire_reason, uuid)
      values ('OPD', 'Visit for patients coming for OPD', 1, now(), null, null,
              0, null, null, null, uuid());
    </sql>
  </changeSet>
  <changeSet id="10122019_1210" author="R-VdP">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="0">
        select count(*)
        from visit_type
        where name = "DISCHARGE";
      </sqlCheck>
    </preConditions>
    <comment>Add the DISCHARGE visit type.</comment>
    <sql>
      insert into openmrs.visit_type(name, description, creator, date_created,
                                     changed_by, date_changed, retired, retired_by,
                                     date_retired, retire_reason, uuid)
      values ('DISCHARGE', 'Visit to register a discharge form for patients lost to follow-up',
              1, now(), null, null, 0, null, null, null, uuid());
    </sql>
  </changeSet>
  <changeSet id="08102019_1601" author="R-VdP">
    <comment>Delete the OpenELIS sync scheduler.</comment>
    <sql>
      delete from scheduler_task_config
      where schedulable_class = 'org.bahmni.module.elisatomfeedclient.api.task.OpenElisPatientFeedFailedEventsTask';
    </sql>
  </changeSet>
  <changeSet id="16102019_1532" author="R-VdP">
    <comment>Delete the relationship types.</comment>
    <sql>
      update relationship_type
      set retired = true, retired_by = 1, date_retired = now(), retire_reason = "Not needed."
      where a_is_to_b = "Supervisor"
        and b_is_to_a = "Supervisee";
    </sql>
  </changeSet>
  <changeSet id="27112019_1730" author="R-VdP">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="0">
        select count(*)
        from scheduler_task_config
        where schedulable_class="org.openmrs.module.emrapi.adt.CloseStaleVisitsTask";
      </sqlCheck>
    </preConditions>
    <comment>Add Bahmni EMR API scheduler which closes stale visits</comment>
    <insert tableName="scheduler_task_config">
      <column name="name" value="Close Stale Visits Task" />
      <column name="description" value="Auto close visit task after number of hours specified by emrapi.visitExpireHours" />
      <column name="schedulable_class" value="org.openmrs.module.emrapi.adt.CloseStaleVisitsTask" />
      <column name="start_on_startup" valueBoolean="true" />
      <column name="start_time_pattern" value="MM/dd/yyyy HH:mm:ss" />
      <column name="start_time" valueDate="2014-04-30T00:00:00" />
      <column name="repeat_interval" value="86400" />
      <column name="date_created" valueDate="CURRENT_TIMESTAMP" />
      <column name="created_by" value="1" />
      <column name="uuid" valueComputed="uuid()" />
    </insert>
  </changeSet>
</databaseChangeLog>

